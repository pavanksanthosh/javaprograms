/*
Given an integer array nums and an integer k, return true if there are two distinct indices i and j in the array such that nums[i] == nums[j] and abs(i - j) <= k.

Example 1:

Input: nums = [1,2,3,1], k = 3
Output: true
Example 2:

Input: nums = [1,0,1,1], k = 1
Output: true
Example 3:

Input: nums = [1,2,3,1,2,3], k = 2
Output: false

*/

package com.pavan.programs;

import java.util.HashMap;

public class DuplicatesNearBy {
  public boolean containsNearbyDuplicate(int[] nums, int k) {
    HashMap<Integer, Integer> map = new HashMap<>();
      for(int index=0; index < nums.length; index++) {
        if(map.containsKey(nums[index])) {
          //check the condition
          if(index - map.get(nums[index]) <= k) {
            return true;
          }
        }
        map.put(nums[index], index);
      }
      return false;
  }
  public static void main(String[] args) {
    DuplicatesNearBy solution = new DuplicatesNearBy();

    // Test Case 1
    int[] nums1 = {1,2,3,1,2,3};
    int k1 = 2;
    System.out.println(solution.containsNearbyDuplicate(nums1, k1)); // Expected Output: true
  }
}

/*
You are given an integer array height of length n. There are n vertical lines drawn such that the two endpoints of the ith line are (i, 0) and (i, height[i]).
Find two lines that together with the x-axis form a container, such that the container contains the most water.
Return the maximum amount of water a container can store.
Notice that you may not slant the container.
*/

package com.pavan.programs;

public class BigContainer {
  public int maxArea(int[] height) {
    int hpointer=0;
    int rpointer=height.length -1;
    int maxArea =0;
    while(hpointer < rpointer) {
      if(height[hpointer] < height[rpointer]) {
        maxArea = Math.max(maxArea, height[hpointer] * (rpointer - hpointer));
        hpointer++;
      } else {
        maxArea = Math.max(maxArea, height[rpointer] * (rpointer - hpointer));
        rpointer--;
      }
    }
    return maxArea;
  }

  public static void main(String[] args) {
    int[] heights = {1, 8, 6, 2, 5, 4, 8, 3, 7};
    BigContainer bigContainer = new BigContainer();
    System.out.println("Max Area: " + bigContainer.maxArea(heights));
  }
}
